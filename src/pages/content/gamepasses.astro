---
import Layout from '../../layouts/Layout.astro';
import { gamepasses } from '../../data/gamepassPrice.js';

function formatKey(key: string) {
  return key
    .replace(/([A-Z])/g, ' $1')
    .replace(/^./, (str: string) => str.toUpperCase());
}

function calculateDiscountedPrice(original: string, discount: string, newPrice?: string) {
  if (newPrice) {
    return parseFloat(newPrice);
  }
  const orig = parseFloat(original);
  const disc = parseFloat(discount);
  if (isNaN(orig)) return NaN;
  if (isNaN(disc) || disc < 0 || disc >= 1) {
     return orig;
  }
  const discounted = orig * (1 - disc);
  return discounted;
}
---

<Layout title="Gamepasses - [CL] Facility Roleplay Wiki">
  <div class="prose max-w-none">
    <h1>Gamepasses</h1>
    <p>In [CL] Facility Roleplay, Gamepasses give you access to a range of teams, weapons, cosmetics, and facility clearances. Click on a gamepass name for more details.</p>

    <h2 class="mt-6 mb-4 text-xl font-semibold">Available Gamepasses</h2>
    <div class="overflow-x-auto">
      <table class="w-full table-fixed border-collapse border border-slate-500 dark:border-slate-400">
        <thead class="bg-slate-200 dark:bg-slate-700 text-slate-800 dark:text-slate-100">
          <tr>
            <th class="w-1/5 px-4 py-2 border border-slate-300 dark:border-slate-600 text-left text-sm font-medium">Gamepass</th>
            <th class="w-2/5 px-4 py-2 border border-slate-300 dark:border-slate-600 text-left text-sm font-medium">Description</th>
            <th class="w-1/5 px-4 py-2 border border-slate-300 dark:border-slate-600 text-left text-sm font-medium">Price (Robux)</th>
            <th class="w-1/5 px-4 py-2 border border-slate-300 dark:border-slate-600 text-left text-sm font-medium">On Sale?</th>
          </tr>
        </thead>
        <tbody class="bg-white dark:bg-slate-800 text-slate-700 dark:text-slate-300">
          {Object.entries(gamepasses).map(([key, pass]) => {
            let displayPrice: number | string = NaN;
            let isDiscounted = false;

            if (pass.newPrice) {
              displayPrice = parseFloat(pass.newPrice);
              isDiscounted = parseFloat(pass.newPrice) !== parseFloat(pass.originalPrice);
            } else {
              const finalPrice = calculateDiscountedPrice(pass.originalPrice, pass.discount);
              displayPrice = finalPrice;
               isDiscounted = finalPrice < parseFloat(pass.originalPrice);
            }

            return (
              <tr class="border-b border-slate-200 dark:border-slate-700">
                <td class="px-4 py-2 border border-slate-300 dark:border-slate-700 text-sm align-top">
                  <a href={`/gamepasses/${key.toLowerCase()}`} class="text-blue-600 dark:text-blue-400 hover:underline">
                    {formatKey(key)}
                  </a>
                </td>
                <td class="px-4 py-2 border border-slate-300 dark:border-slate-700 text-sm align-top" set:html={pass.description}>
                </td>
                <td class={`px-4 py-2 border border-slate-300 dark:border-slate-700 text-sm align-top ${isDiscounted || pass.newPrice ? 'has-discount' : ''}`}>
                  {(isDiscounted || (pass.newPrice && parseFloat(pass.newPrice) !== parseFloat(pass.originalPrice))) && (
                    <span class="line-through text-gray-500 dark:text-gray-400 mr-2">{pass.originalPrice}</span>
                  )}
                  {isNaN(displayPrice) ? 'N/A' : displayPrice}
                </td>
                <td class={`px-4 py-2 border border-slate-300 dark:border-slate-700 text-sm font-semibold align-top ${pass.isOnSale ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`}>
                  {pass.isOnSale ? 'Yes' : 'No'}
                </td>
              </tr>
            );
          })}
        </tbody>
      </table>
    </div>
  </div>
</Layout>

<style>
  .prose table {
    table-layout: fixed;
    width: 100%;
  }
  .prose th, .prose td {
    vertical-align: top;
  }
</style>
